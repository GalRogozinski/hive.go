// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	identity "github.com/iotaledger/hive.go/identity"
	mock "github.com/stretchr/testify/mock"

	net "net"

	server "github.com/iotaledger/hive.go/autopeering/server"
)

// Sender is an autogenerated mock type for the Sender type
type Sender struct {
	mock.Mock
}

// Send provides a mock function with given fields: toAddr, data
func (_m *Sender) Send(toAddr *net.UDPAddr, data []byte) {
	_m.Called(toAddr, data)
}

// SendExpectingReply provides a mock function with given fields: toAddr, toID, data, replyType, callback
func (_m *Sender) SendExpectingReply(toAddr *net.UDPAddr, toID identity.ID, data []byte, replyType server.MType, callback func(server.Message) bool) <-chan error {
	ret := _m.Called(toAddr, toID, data, replyType, callback)

	var r0 <-chan error
	if rf, ok := ret.Get(0).(func(*net.UDPAddr, identity.ID, []byte, server.MType, func(server.Message) bool) <-chan error); ok {
		r0 = rf(toAddr, toID, data, replyType, callback)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan error)
		}
	}

	return r0
}
